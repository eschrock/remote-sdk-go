// Code generated by protoc-gen-go. DO NOT EDIT.
// source: remote.proto

package remote

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_struct "github.com/golang/protobuf/ptypes/struct"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RemoteType struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoteType) Reset()         { *m = RemoteType{} }
func (m *RemoteType) String() string { return proto.CompactTextString(m) }
func (*RemoteType) ProtoMessage()    {}
func (*RemoteType) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{0}
}

func (m *RemoteType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteType.Unmarshal(m, b)
}
func (m *RemoteType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteType.Marshal(b, m, deterministic)
}
func (m *RemoteType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteType.Merge(m, src)
}
func (m *RemoteType) XXX_Size() int {
	return xxx_messageInfo_RemoteType.Size(m)
}
func (m *RemoteType) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteType.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteType proto.InternalMessageInfo

func (m *RemoteType) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ExtendedURL struct {
	Url                  string            `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Values               map[string]string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ExtendedURL) Reset()         { *m = ExtendedURL{} }
func (m *ExtendedURL) String() string { return proto.CompactTextString(m) }
func (*ExtendedURL) ProtoMessage()    {}
func (*ExtendedURL) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{1}
}

func (m *ExtendedURL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtendedURL.Unmarshal(m, b)
}
func (m *ExtendedURL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtendedURL.Marshal(b, m, deterministic)
}
func (m *ExtendedURL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtendedURL.Merge(m, src)
}
func (m *ExtendedURL) XXX_Size() int {
	return xxx_messageInfo_ExtendedURL.Size(m)
}
func (m *ExtendedURL) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtendedURL.DiscardUnknown(m)
}

var xxx_messageInfo_ExtendedURL proto.InternalMessageInfo

func (m *ExtendedURL) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ExtendedURL) GetValues() map[string]string {
	if m != nil {
		return m.Values
	}
	return nil
}

type RemoteProperties struct {
	Values               *_struct.Struct `protobuf:"bytes,1,opt,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RemoteProperties) Reset()         { *m = RemoteProperties{} }
func (m *RemoteProperties) String() string { return proto.CompactTextString(m) }
func (*RemoteProperties) ProtoMessage()    {}
func (*RemoteProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{2}
}

func (m *RemoteProperties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoteProperties.Unmarshal(m, b)
}
func (m *RemoteProperties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoteProperties.Marshal(b, m, deterministic)
}
func (m *RemoteProperties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoteProperties.Merge(m, src)
}
func (m *RemoteProperties) XXX_Size() int {
	return xxx_messageInfo_RemoteProperties.Size(m)
}
func (m *RemoteProperties) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoteProperties.DiscardUnknown(m)
}

var xxx_messageInfo_RemoteProperties proto.InternalMessageInfo

func (m *RemoteProperties) GetValues() *_struct.Struct {
	if m != nil {
		return m.Values
	}
	return nil
}

type ParameterProperties struct {
	Values               *_struct.Struct `protobuf:"bytes,1,opt,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ParameterProperties) Reset()         { *m = ParameterProperties{} }
func (m *ParameterProperties) String() string { return proto.CompactTextString(m) }
func (*ParameterProperties) ProtoMessage()    {}
func (*ParameterProperties) Descriptor() ([]byte, []int) {
	return fileDescriptor_eefc82927d57d89b, []int{3}
}

func (m *ParameterProperties) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ParameterProperties.Unmarshal(m, b)
}
func (m *ParameterProperties) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ParameterProperties.Marshal(b, m, deterministic)
}
func (m *ParameterProperties) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ParameterProperties.Merge(m, src)
}
func (m *ParameterProperties) XXX_Size() int {
	return xxx_messageInfo_ParameterProperties.Size(m)
}
func (m *ParameterProperties) XXX_DiscardUnknown() {
	xxx_messageInfo_ParameterProperties.DiscardUnknown(m)
}

var xxx_messageInfo_ParameterProperties proto.InternalMessageInfo

func (m *ParameterProperties) GetValues() *_struct.Struct {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterType((*RemoteType)(nil), "remote.RemoteType")
	proto.RegisterType((*ExtendedURL)(nil), "remote.ExtendedURL")
	proto.RegisterMapType((map[string]string)(nil), "remote.ExtendedURL.ValuesEntry")
	proto.RegisterType((*RemoteProperties)(nil), "remote.RemoteProperties")
	proto.RegisterType((*ParameterProperties)(nil), "remote.ParameterProperties")
}

func init() { proto.RegisterFile("remote.proto", fileDescriptor_eefc82927d57d89b) }

var fileDescriptor_eefc82927d57d89b = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x51, 0x4d, 0x4b, 0xc3, 0x40,
	0x14, 0x24, 0xfd, 0x88, 0xf8, 0xa2, 0x50, 0xb6, 0xa2, 0x61, 0x2b, 0x58, 0x72, 0xea, 0x69, 0x0b,
	0x11, 0xb4, 0x7a, 0x95, 0xd6, 0x8b, 0x87, 0x12, 0xab, 0xf7, 0xd4, 0x3e, 0x8b, 0x34, 0xe9, 0x86,
	0xcd, 0x46, 0xdc, 0xdf, 0xe1, 0x7f, 0xf5, 0x2c, 0xbb, 0x9b, 0x94, 0xa8, 0xd1, 0x8b, 0xb7, 0x7d,
	0xef, 0xcd, 0x4c, 0x66, 0x26, 0x70, 0x20, 0x30, 0xe5, 0x12, 0x59, 0x26, 0xb8, 0xe4, 0xc4, 0xb5,
	0x13, 0x1d, 0xac, 0x39, 0x5f, 0x27, 0x38, 0x36, 0xdb, 0x65, 0xf1, 0x3c, 0xc6, 0x34, 0x93, 0xca,
	0x82, 0xe8, 0xe9, 0xf7, 0x63, 0x2e, 0x45, 0xf1, 0x24, 0xed, 0x35, 0x18, 0x02, 0x44, 0x46, 0x64,
	0xa1, 0x32, 0x24, 0x04, 0x3a, 0x52, 0x65, 0xe8, 0x3b, 0x43, 0x67, 0xb4, 0x1f, 0x99, 0x77, 0xf0,
	0xee, 0x80, 0x37, 0x7d, 0x93, 0xb8, 0x5d, 0xe1, 0xea, 0x21, 0xba, 0x23, 0x3d, 0x68, 0x17, 0x22,
	0x29, 0x21, 0xfa, 0x49, 0x2e, 0xc1, 0x7d, 0x8d, 0x93, 0x02, 0x73, 0xbf, 0x35, 0x6c, 0x8f, 0xbc,
	0xf0, 0x8c, 0x95, 0x2e, 0x6b, 0x34, 0xf6, 0x68, 0x10, 0xd3, 0xad, 0x14, 0x2a, 0x2a, 0xe1, 0xf4,
	0x0a, 0xbc, 0xda, 0x5a, 0x2b, 0x6f, 0x50, 0x55, 0xca, 0x1b, 0x54, 0xe4, 0x08, 0xba, 0x06, 0xea,
	0xb7, 0xcc, 0xce, 0x0e, 0xd7, 0xad, 0x89, 0x13, 0xdc, 0x40, 0xcf, 0xfa, 0x9e, 0x0b, 0x9e, 0xa1,
	0x90, 0x2f, 0x98, 0x93, 0xf1, 0xce, 0x87, 0x96, 0xf0, 0xc2, 0x13, 0x66, 0xa3, 0xb3, 0x2a, 0x3a,
	0xbb, 0x37, 0xd1, 0xab, 0xef, 0x07, 0x33, 0xe8, 0xcf, 0x63, 0x11, 0xa7, 0x28, 0x51, 0xfc, 0x43,
	0x27, 0xfc, 0x70, 0xc0, 0xb5, 0x6e, 0x48, 0x08, 0x1d, 0xd3, 0xe4, 0xf1, 0x0f, 0xce, 0x54, 0xff,
	0x13, 0x4a, 0xaa, 0x6e, 0x6a, 0xad, 0x4f, 0x60, 0x6f, 0x26, 0x78, 0xaa, 0xcb, 0xed, 0x37, 0x54,
	0x47, 0xfd, 0xaf, 0x9c, 0x9a, 0xd3, 0x0b, 0xe8, 0x2e, 0xb8, 0xe6, 0xfd, 0x0a, 0xa1, 0x4d, 0x8a,
	0x64, 0x06, 0x87, 0xb7, 0x28, 0x77, 0xd9, 0xf3, 0x3f, 0xf8, 0x83, 0xea, 0xd2, 0xd0, 0xd4, 0xd2,
	0x35, 0xe9, 0xce, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x33, 0xf0, 0x33, 0x94, 0x97, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RemoteClient is the client API for Remote service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RemoteClient interface {
	Type(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RemoteType, error)
	FromURL(ctx context.Context, in *ExtendedURL, opts ...grpc.CallOption) (*RemoteProperties, error)
	ToURL(ctx context.Context, in *RemoteProperties, opts ...grpc.CallOption) (*ExtendedURL, error)
	GetParameters(ctx context.Context, in *RemoteProperties, opts ...grpc.CallOption) (*ParameterProperties, error)
}

type remoteClient struct {
	cc *grpc.ClientConn
}

func NewRemoteClient(cc *grpc.ClientConn) RemoteClient {
	return &remoteClient{cc}
}

func (c *remoteClient) Type(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RemoteType, error) {
	out := new(RemoteType)
	err := c.cc.Invoke(ctx, "/remote.Remote/Type", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) FromURL(ctx context.Context, in *ExtendedURL, opts ...grpc.CallOption) (*RemoteProperties, error) {
	out := new(RemoteProperties)
	err := c.cc.Invoke(ctx, "/remote.Remote/FromURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) ToURL(ctx context.Context, in *RemoteProperties, opts ...grpc.CallOption) (*ExtendedURL, error) {
	out := new(ExtendedURL)
	err := c.cc.Invoke(ctx, "/remote.Remote/ToURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *remoteClient) GetParameters(ctx context.Context, in *RemoteProperties, opts ...grpc.CallOption) (*ParameterProperties, error) {
	out := new(ParameterProperties)
	err := c.cc.Invoke(ctx, "/remote.Remote/GetParameters", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RemoteServer is the server API for Remote service.
type RemoteServer interface {
	Type(context.Context, *empty.Empty) (*RemoteType, error)
	FromURL(context.Context, *ExtendedURL) (*RemoteProperties, error)
	ToURL(context.Context, *RemoteProperties) (*ExtendedURL, error)
	GetParameters(context.Context, *RemoteProperties) (*ParameterProperties, error)
}

// UnimplementedRemoteServer can be embedded to have forward compatible implementations.
type UnimplementedRemoteServer struct {
}

func (*UnimplementedRemoteServer) Type(ctx context.Context, req *empty.Empty) (*RemoteType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Type not implemented")
}
func (*UnimplementedRemoteServer) FromURL(ctx context.Context, req *ExtendedURL) (*RemoteProperties, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FromURL not implemented")
}
func (*UnimplementedRemoteServer) ToURL(ctx context.Context, req *RemoteProperties) (*ExtendedURL, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToURL not implemented")
}
func (*UnimplementedRemoteServer) GetParameters(ctx context.Context, req *RemoteProperties) (*ParameterProperties, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetParameters not implemented")
}

func RegisterRemoteServer(s *grpc.Server, srv RemoteServer) {
	s.RegisterService(&_Remote_serviceDesc, srv)
}

func _Remote_Type_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).Type(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote.Remote/Type",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).Type(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_FromURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExtendedURL)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).FromURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote.Remote/FromURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).FromURL(ctx, req.(*ExtendedURL))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_ToURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoteProperties)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).ToURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote.Remote/ToURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).ToURL(ctx, req.(*RemoteProperties))
	}
	return interceptor(ctx, in, info, handler)
}

func _Remote_GetParameters_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoteProperties)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RemoteServer).GetParameters(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remote.Remote/GetParameters",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RemoteServer).GetParameters(ctx, req.(*RemoteProperties))
	}
	return interceptor(ctx, in, info, handler)
}

var _Remote_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remote.Remote",
	HandlerType: (*RemoteServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Type",
			Handler:    _Remote_Type_Handler,
		},
		{
			MethodName: "FromURL",
			Handler:    _Remote_FromURL_Handler,
		},
		{
			MethodName: "ToURL",
			Handler:    _Remote_ToURL_Handler,
		},
		{
			MethodName: "GetParameters",
			Handler:    _Remote_GetParameters_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "remote.proto",
}
